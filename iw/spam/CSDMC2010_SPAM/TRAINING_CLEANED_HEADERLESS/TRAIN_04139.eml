> oops, i tend to feel like that most times! i tend to feel that if we
> have extremely good compilation tools, then those tools should be able
> to do the inlining and optimisation far better than i could. that's the
> theory anyway :) and there's always a tradeoff with inlining between
> speed and memory bloat (which may sometimes be no tradeoff if swap
> starts getting involved...)

yes and i understand that argument, however.
sometimes i find that if i don't try to write code in the least space
possible or for example become lazy and say

--bad style
bool q;

if(q)
when i should say
if(q==true)

or

--bad optimization

int a;
a=some_function();
if(a) <--which apparently works but is 'bad coding style'.

that's what i mean about letting the programming tools take care
of the coding.... it's considered 'bad' apparently.

or for example say you are writing a loop that says

for(a=0;a>

-- 
irish linux users' group: ilug@linux.ie
http://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.
list maintainer: listmaster@linux.ie


