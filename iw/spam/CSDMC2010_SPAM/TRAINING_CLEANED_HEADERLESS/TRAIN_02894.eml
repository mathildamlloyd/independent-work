on sun, may 23, 2010 at 7:34 pm, john engelhart
 wrote:
> if you believe otherwise, show your work. =c2=a0otherwise, the point is s=
ettled.

fact: the c standard does not say anything about machine-level calling
conventions.

fact: the c standard does not address the behavior which results when
the call site of a function sees a prototype whose return type differs
from the return type present at the definition of the function.

conclusion: a conforming c compiler could use completely different
techniques for returning 'int' and 'long'.

conclusion: in such an abi, machine-level code which arranges for
callers to see an 'int' return value of 0 could easily be written such
that a caller which expects 'long' to see something other than zero.

conclusion: if you're paranoid about portability, you can't assume
that messages to nil with a 'long' return type will return 0, with a
strict reading of apple's guarantees.

and note that absolutely nothing in the above is even slightly related
to integer type sizes, type conversions, casts, promotions, the
bit-level representation of the null pointer, or any other such
things, so any discussion of them in this context is utterly
pointless.

mike
 _______________________________________________
do not post admin requests to the list. they will be ignored.
objc-language mailing list      (objc-language@lists.apple.com)
help/unsubscribe/update your subscription:
http://lists.apple.com/mailman/options/objc-language/mlsubscriber.tech%40csmining.org

this email sent to mlsubscriber.tech@csmining.org

