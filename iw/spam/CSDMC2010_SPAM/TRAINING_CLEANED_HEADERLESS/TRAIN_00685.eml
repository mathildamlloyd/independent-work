on 30 apr 2010, at 07:42, niagarasoft20-jdev@yahoo.com wrote:

> java _is_ allowed on osx.

the situation between flash and java isn't even comparable.

java is open and useful, flash is neither.

java still shares the the lowest-common-denominator cross-platform =
weakness/strength (depending on perspective), which apple may not want =
to promote on the iphone, because, let's face it, there are so many =
patents on the iphone that lots of that stuff can't be done in a =
cross-platform way, because other platforms won't be allowed to have the =
same functionality.
so cross-platform code on the iphone/ipod/ipad just doesn't make sense. =
the market is big enough that if their product sell on these devices, =
the developers can afford to make a first-class citizen native app =
rather than being lazy and trying to write the same things for =
deployment everywhere.

nothing stops anyone from using a portable code engine (e.g. c code or =
java compiled to c) and then put a native cocoa touch gui on it.

flash from the get-go was designed to captivate a part of the internet =
and make it privately owned, just like silverlight and a slew of other =
efforts, too. flash and frames are the bane of the web. can't properly =
search, bookmark, print, copy&paste;, etc. any of these. may they die a =
quick, painful death, they caused enough suffering for users and web =
developers alike.

having a several dozen web pages open sucks the life out of the fastest =
machines, because of all the flash. that i only could suspect until 10.6 =
put plug-ins in subprocesses. the relative cpu load between all of =
safari vs. the flash plug-in speaks volumes.

as much as i have to criticize about the closed nature/censorship of the =
appstore ecosystem, i'm thrilled that apple isn't bending. i hope apple =
can give the blow of death to flash, which has been more than an =
annoyance for many years. i can't wait until that's a chapter in =
computing history. bravo jobs&co.;!!!

i also support his statement about adobe being lazy. no version of any =
macromedia/adobe suite has ever run properly on any machine that has a =
case-sensitvive root file system. if software is properly written, it =
shouldn't even notice a difference, and the only parties which have to =
be aware of the difference are users that copy files in a mixed file =
system environment, or writers of backup/file-management software (where =
2 files on one file system might map to one file on another).

only sloppy coding where paths are not #define-ed in one place but more =
or less accurately copy&paste-ed; all over the code base causes issues =
with resource and path name mismatches when the software is installed on =
a case-sensitive file system. for a decade and several product cycles =
adobe didn't fix that, even though there were many bug reports about the =
matter and even though apple emphasized several times on various =
occasions at wwdc that developers shouldn't make any assumptions on the =
nature of the file system that the system is installed.

adobe didn't (want to) get it. they just wanted to continue milking =
their old pre-os9 code base for as long as possible. i wish apple would =
use some of their war chest to produce true competitors to adobe's crap =
that are reasonably priced. adobe charges up the wazoo, and didn't care =
to be a good platform citizen, and were it not for the 64-bit =
transition, they'd still ship old, buggy carbon based code. barf! i'm =
glad jobs finally said it and broke with corporate politeness.=
 _______________________________________________
do not post admin requests to the list. they will be ignored.
java-dev mailing list      (java-dev@lists.apple.com)
help/unsubscribe/update your subscription:
http://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org

this email sent to mlsubscriber.tech@csmining.org

